// Top-level build file where you can add configuration options common to all sub-projects/modules.
ext {
    compileSdkVersion = 28
    buildToolsVersion = '28.0.3'
    minSdkVersion = 16
    targetSdkVersion = 28
    versionCode = 1
    versionName = "v1.0.1"

    moduleName = [
            moduleCommon: ':common',
            moduleMusic : ':music'
    ]

    guavaVersion = '23.6-android'
    // Test
    junitVersion = '4.12'
    mockitoVersion = '1.10.19'
    powerMockito = '1.6.2'
    hamcrestVersion = '1.3'
    //
    work_version = '1.0.0-alpha11'
    // -------------
    supportLibraryVersionx = '1.0.0'
    archLifecycleVersionx = "2.0.0"
    roomVersionx = "2.0.0"
    runnerVersionx = '1.1.0-alpha3'
    uiautomatorx = '2.2.0'
    espressoVersionx = '3.1.0-alpha3'
    //
    zazeutilVersion = '1.0.0'
    leakcanaryVersion = '1.5'
}

buildscript {
    ext.kotlin_version = '1.2.71'
    ext.gradlePluginVersion = '3.2.1'

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradlePluginVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
//        maven {
//            url "https://dl.bintray.com/zaze359/maven"
//        }
        maven { url 'https://jitpack.io' }
    }
}

subprojects {
    def isMainApp = project.name == 'app'
    if (isMainApp) {
        apply plugin: 'com.android.application'
    } else {
        apply plugin: 'com.android.library'
    }
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'
    apply plugin: 'kotlin-kapt'

    android {
        compileSdkVersion rootProject.ext.compileSdkVersion
        buildToolsVersion rootProject.ext.buildToolsVersion

        defaultConfig {
            minSdkVersion rootProject.ext.minSdkVersion
            targetSdkVersion rootProject.ext.targetSdkVersion
            versionCode rootProject.ext.versionCode
            versionName rootProject.ext.versionName
            flavorDimensions "$rootProject.ext.versionCode"
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }

        if (isMainApp) {
            productFlavors {
                product {
                    applicationId "com.zaze.tribe"
                    buildConfigField("String", "URL", "\"http://www.google.com\"")
                    resValue("string", "app_name", "product")
                }

                pre {
                    applicationIdSuffix '.pre'
                    buildConfigField("String", "URL", "\"http://www.baidu.com\"")
                    resValue("string", "app_name", "pre")
                }
            }
            sourceSets {
//                main {
//                    java.srcDirs = ['src/main/java']
//                    res.srcDirs = ['src/main/res']
//                }
                product {
                    java.srcDirs = ['src/main/java']
                    res.srcDirs = ['src/main/res']
                    java.srcDirs = ['src/product/java']
                    res.srcDirs = ['src/product/res']
                }
                pre {
                    java.srcDirs = ['src/main/java']
                    res.srcDirs = ['src/main/res']
                    java.srcDirs = ['src/pre/java']
                    res.srcDirs = ['src/pre/res']
                }
            }
        }

        dataBinding {
            enabled = true
        }
    }

    dependencies {
        androidTestImplementation "androidx.test:rules:$runnerVersionx"
        androidTestImplementation "androidx.test:runner:$runnerVersionx"
        androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersionx"
//    androidTestImplementation "androidx.test.uiautomator:uiautomator:$rootProject.uiautomatorx"
        // -----------------------
        testImplementation "junit:junit:$junitVersion"
        debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanaryVersion"
        releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVersion"
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}